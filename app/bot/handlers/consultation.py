from aiogram import Router, types
from aiogram.filters import Command

from app.services.ai_service import AIService
from app.services.document_service import DocumentService

router = Router()


@router.message(Command(commands=['question']))
async def cmd_question(message: types.Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤."""
    if not message.text or len(message.text.split()) < 2:
        await message.answer(
            "‚ùì –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å.\n"
            "–ü—Ä–∏–º–µ—Ä: /question –ö–∞–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —á–ª–µ–Ω—Å—Ç–≤—É –≤ –°–†–û?"
        )
        return
    
    question = " ".join(message.text.split()[1:])
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç –¥—É–º–∞–µ—Ç
    typing_message = await message.answer("ü§î –ò—â—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...")
    
    try:
        ai_service = AIService()
        document_service = DocumentService()
        
        # –ü–æ–∏—Å–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        context = await document_service.search_relevant_content(question)
        if not context:
            await typing_message.edit_text("üì≠ –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã.")
            return
            
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ò–ò
        response = await ai_service.generate_consultation_response(
            user_question=question,
            user_id=message.from_user.id,
            context=context
        )
        
        await typing_message.edit_text(response)
        
    except Exception as e:
        await typing_message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. "
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏."
        )


@router.message()
async def handle_free_text(message: types.Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∫–∞–∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞."""
    if message.text and len(message.text) > 10:
        # –ü–µ—Ä–µ–¥–∞–µ–º –≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å
        await cmd_question(message)
