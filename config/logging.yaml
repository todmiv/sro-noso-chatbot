version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  detailed:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(module)s - %(funcName)s - %(lineno)d - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  json:
    format: "%(asctime)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
    class: pythonjsonlogger.jsonlogger.JsonFormatter

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout

  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/app.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/error.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

  bot_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/bot.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8

loggers:
  aiogram:
    level: INFO
    handlers: [console, bot_file]
    propagate: false

  app:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false

  app.bot:
    level: INFO
    handlers: [console, bot_file]
    propagate: false

  app.services:
    level: DEBUG
    handlers: [console, file]
    propagate: false

  app.ai_integration:
    level: INFO
    handlers: [console, file]
    propagate: false

  app.database:
    level: WARNING
    handlers: [console, file]
    propagate: false

  sqlalchemy.engine:
    level: WARNING
    handlers: [console, file]
    propagate: false

  aiohttp.access:
    level: INFO
    handlers: [console, file]
    propagate: false

root:
  level: INFO
  handlers: [console, file, error_file]
